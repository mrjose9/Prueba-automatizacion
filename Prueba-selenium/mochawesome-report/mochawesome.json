{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2023-08-10T17:27:14.657Z",
    "end": "2023-08-10T17:27:25.471Z",
    "duration": 10814,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d38f2101-eed7-4d53-a7cf-374e26416e44",
      "title": "",
      "fullFile": "C:\\Users\\G\\Desktop\\Prueba-selenium\\tests\\login.spec.js",
      "file": "\\tests\\login.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "10c32434-fbdd-44e3-a358-a4371b58f0ce",
          "title": "Login",
          "fullFile": "C:\\Users\\G\\Desktop\\Prueba-selenium\\tests\\login.spec.js",
          "file": "\\tests\\login.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Login with standard_user credential",
              "fullTitle": "Login Login with standard_user credential",
              "timedOut": null,
              "duration": 10198,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Crea una instancia del controlador (driver) para el navegador Chrome\n      let driver = new Builder().forBrowser('chrome').build(); \n      try {\n          // Abre la página de inicio de sesión en el navegador\n          await driver.get('file:///C:/Users/G/Desktop/Pagina-web/login.html') \n          // Encuentra el elemento de nombre de usuario mediante su id y envia la palabra \"usuario\" al input.\n          await driver.findElement(By.id('username')).sendKeys('usuario') \n          // Encuntra el elemento de contraseña mediante su id y envia la palabra \"102030\" al input.\n          await driver.findElement(By.id('password')).sendKeys('102030') \n          // Encontra el botón de inicio de sesión por su selector CSS y hace clic en él\n          await driver.findElement(By.css('[data-test=\"login-button\"]')).click(); \n          // Hace una captura de pantalla utilizando la función takeScreenshot()\n          const screenshotData = await driver.takeScreenshot();\n          \n          // Guarda los datos de la captura de pantalla en un archivo llamado \"screenshot.png\"\n          fs.writeFileSync(\"screenshot.png\", screenshotData, \"base64\");\n          // Esperar 5 segundos (5000 milisegundos)\n          await driver.sleep(5000);\n      } finally {\n          // Cerrar la instancia del controlador y finalizar la prueba\n          await driver.quit(); \n      }",
              "err": {},
              "uuid": "31b4b1eb-db5f-487f-9a0c-67bb30249d14",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "31b4b1eb-db5f-487f-9a0c-67bb30249d14"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10198,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}